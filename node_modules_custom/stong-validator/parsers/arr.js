"use strict";

var _ = require('lodash-node');

var getType;
var smartSpaceSplit = require('../spaceSplit');

function fromArr (fullKey, tplStr, tplObj, arrItems, cfg) {
    var items = smartSpaceSplit(tplStr), item,
        i, l, t;

    if (!getType) {
        // lazy. Иначе циркулярная зависимость модулей
        getType = require('./getType');
    }

    var obj = {};

    if (items === false) {
        return 'Ошибка шаблона: В шаблоне присутствуют спец. знаки' + (fullKey ? (' (поле ' + fullKey + ')') : '') + ' ' + (new Error()).stack;
    }

    item = items[0];

    if (item === 'arr' || item === 'array') {
        obj.t = 'arr';
    } else {
        return 'Ошибка шаблона: В шаблоне первым делом должен идти тип ' + (fullKey ? (' (поле ' + fullKey + ')') : '') + ' ' + (new Error()).stack;
    }

    for (i = 1, l = items.length; i < l; i += 1) {
        item = items[i];
        switch (item) {
            case 'requiredKey':
            case 'reqKey':
                obj.reqKey = true;
                break;
            case 'null':
                obj.nullable = true;
                break;
            case 'default':
            case 'def':
                t = items[++i];
                if (!t) {
                    return 'Ошибка шаблона: Нет значения для "default"' + (fullKey ? (' (поле ' + fullKey + ')') : '') + ' ' + (new Error()).stack;
                }
                obj.def = (t === 'null' ? null : (t === '[]' ? [] : t));
                break;
            default:
                return 'Ошибка шаблона: Неопознанный тег "' + item + '"' + (fullKey ? (' (поле ' + fullKey + ')') : '') + ' ' + (new Error()).stack;
        }
    }

    if ( arrItems && _.some(arrItems, function (el, pos) { return !_.isFunction(el); })) {
        return 'Ошибка шаблона: Валидаторами могут быть только функции' + (fullKey ? (' (поле ' + fullKey + ')') : '') + ' ' + (new Error()).stack;
    }

    obj.customValidators = arrItems;

    // Возвращаем ошибку парсинга, либо объект парсинга
    t = getType(fullKey, '', tplObj);
    obj.tpl = t;
    return _.isString(t) ? t : obj;
}

module.exports = {
    fromArr: fromArr
};