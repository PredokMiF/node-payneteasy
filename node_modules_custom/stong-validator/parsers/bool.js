"use strict";

var _ = require('lodash-node');

var smartSpaceSplit = require('../spaceSplit');

function fromArr (fullKey, tpl, arrItems, cfg) {
    var items = smartSpaceSplit(tpl), item,
        i, l, j,
        convType;

    var obj = {};

    if (items === false) {
        return 'Ошибка шаблона: В шаблоне присутствуют спец. знаки ' + (fullKey ? (' (поле ' + fullKey + ')') : '') + ' ' + (new Error()).stack;
    }

    item = items[0];

    if (item === 'b' || item === 'bool' || item === 'boolean') {
        obj.t = 'b';
    } else {
        return 'Ошибка шаблона: В шаблоне первым делом должен идти тип ' + (fullKey ? (' (поле ' + fullKey + ')') : '') + ' ' + (new Error()).stack;
    }

    for (i = 1, l = items.length; i < l; i += 1) {
        item = items[i];
        switch (item) {
            case 'requiredKey':
            case 'reqKey':
                obj.reqKey = true;
                break;
            case 'convert':
                convType = items[++i].split(',');
                for (j = convType.length; j--; ) {
                    switch(convType[j]) {
                        case 'number':
                        case 'num':
                            obj.convNum = true;
                            break;
                        case 'sNumber':
                        case 'sNum':
                            obj.convSNum = true;
                            break;
                        case 'on':
                        case 'off':
                            obj.convOnOff = true;
                            break;
                        case 'true':
                        case 'false':
                            obj.convTrueFalse = true;
                            break;
                        case 'all':
                            obj.convNum = true;
                            obj.convSNum = true;
                            obj.convOnOff = true;
                            obj.convTrueFalse = true;
                            break;
                        default:
                            return 'Ошибка шаблона: Неизвестный тип convert: ' + convType[j] + (fullKey ? (' (поле ' + fullKey + ')') : '') + ' ' + (new Error()).stack;
                    }
                }
                break;
            default:
                return 'Ошибка шаблона: Неопознанный тег "' + item + '"' + (fullKey ? (' (поле ' + fullKey + ')') : '') + ' ' + (new Error()).stack;
        }
    }

    if ( arrItems && _.some(arrItems, function (el, pos) { return !_.isFunction(el); })) {
        return 'Ошибка шаблона: Второй и все последующие элементы в переданном массиве должны быть функциями' + (fullKey ? (' (поле ' + fullKey + ')') : '') + ' ' + (new Error()).stack;
    }

    obj.customValidators = arrItems;

    return obj;
}

module.exports = {
    fromArr: fromArr
};