"use strict";

/* Описание работы со строками.
 * В валидатор сразу можно передавать элементарные типы, в частности строки:
 * var tpl = v('string');
 * tpl('A').
 *      then(function (result) {
 *          // Валидация пройдена
 *      }, function (err) {
 *          // Валидация свалилась с ошибкой
 *      }).done(function () {
 *          // Выполнится в любом случае
 *      });
 * Для определеления типа строки, в шаблоне, можно передавать string и его синонимы str и s
 * н.р. var tpl = v('str');
 *
 * После типа через пробел можно перечислять другие параметры:
 * toString (синоним toStr) - приводит null и undefined к пустой строке, а так же числа к их строковому значению
 * min <число> - вводит ограничение на минимальную длинну строки. Число д.б. целым, больше или равно нулю
 * max <число> - вводит ограничение на максимальную длинну строки. Число д.б. целым, больше или равно нулю
 *
 * Можно указывать свои валидаторы:
 * var tpl = v(['s', function (tpl, cfg, obj) { return obj.match(/^[qew]+$/); }, function (tpl, cfg, obj) { return obj.match(/^[a-z]+$/); }]);
 * Обратите внимание что описание д.б. обенуто в массив, а строка с типом быть первой.
 * Валидаторы принимают 3 параметра (tpl, cfg, obj) и должны вернуть true - все ок, или false - валидация не прошла
 *
 * Все вместе:
 * var tpl = v(['s toStr min 1 max 10', function (tpl, cfg, obj) { return obj.match(/^[a-z]+$/); }]);
 */

var v = require('../app');

module.exports = {
    // Проверяем что валидация по строке работает
    'test-string-102dbf5f-7a35-46bd-83b1-58d8b755a449': function (test) {
        var tpl = v('string');
        tpl('A').
            then(function (result) {
                test.equals(result, 'A');
            }, function (err) {
                test.ok(false, 'Ошибки быть не должно: ' + err);
            }).done(function () { test.done(); });
    },
    'test-string-832a91cb-97fb-4476-a175-da68e28fe4cd': function (test) {
        var tpl = v('str');
        tpl('A').
            then(function (result) {
                test.equals(result, 'A');
            }, function (err) {
                test.ok(false, 'Ошибки быть не должно: ' + err);
            }).done(function () { test.done(); });
    },
    'test-string-f9e11055-03db-49d5-a6d5-48b0248ff814': function (test) {
        var tpl = v('s');
        tpl('A').
            then(function (result) {
                test.equals(result, 'A');
            }, function (err) {
                test.ok(false, 'Ошибки быть не должно: ' + err);
            }).done(function () { test.done(); });
    },
    'test-string-b7b9149c-d02f-4d64-b58d-fb39b3b52c83': function (test) {
        var tpl = v('s trim');
        tpl('A ').
            then(function (result) {
                test.equals(result, 'A');
            }, function (err) {
                test.ok(false, 'Ошибки быть не должно: ' + err);
            }).done(function () { test.done(); });
    },
    'test-string-775ec38c-d9e3-48ae-896b-b7cdeee287bc': function (test) {
        var tpl = v('s toLower');
        tpl('A').
            then(function (result) {
                test.equals(result, 'a');
            }, function (err) {
                test.ok(false, 'Ошибки быть не должно: ' + err);
            }).done(function () { test.done(); });
    },
    // Ломаем
    'test-string-fd54df3d-9e03-4d7e-b77f-7b622e7c9099': function (test) {
        var tpl = v('s');
        tpl().
            then(function (result) {
                test.ok(false, 'Должна быть ошибка');
            }, function (err) {
                test.ok(err);
            }).done(function () { test.done(); });
    },
    'test-string-1ea2dc92-42ee-4535-a8ae-3024a79eb539': function (test) {
        var tpl = v('s');
        tpl(undefined).
            then(function (result) {
                test.ok(false, 'Должна быть ошибка');
            }, function (err) {
                test.ok(err);
            }).done(function () { test.done(); });
    },
    'test-string-ea7da53c-f7ea-483e-849e-0ddcf6bb67f7': function (test) {
        var tpl = v('s');
        tpl(null).
            then(function (result) {
                test.ok(false, 'Должна быть ошибка');
            }, function (err) {
                test.ok(err);
            }).done(function () { test.done(); });
    },
    'test-string-579c8fa4-0702-4345-92ab-567a50923788': function (test) {
        var tpl = v('s');
        tpl(true).
            then(function (result) {
                test.ok(false, 'Должна быть ошибка');
            }, function (err) {
                test.ok(err);
            }).done(function () { test.done(); });
    },
    'test-string-dd28542f-0ad9-409e-9b38-ed64d595148d': function (test) {
        var tpl = v('s');
        tpl(false).
            then(function (result) {
                test.ok(false, 'Должна быть ошибка');
            }, function (err) {
                test.ok(err);
            }).done(function () { test.done(); });
    },
    'test-string-0ce874bb-c536-494a-913c-c430d68526f1': function (test) {
        var tpl = v('s');
        tpl(-1).
            then(function (result) {
                test.ok(false, 'Должна быть ошибка');
            }, function (err) {
                test.ok(err);
            }).done(function () { test.done(); });
    },
    'test-string-fc6a925e-0511-421e-96be-5758d9bb5f51': function (test) {
        var tpl = v('s');
        tpl(0).
            then(function (result) {
                test.ok(false, 'Должна быть ошибка');
            }, function (err) {
                test.ok(err);
            }).done(function () { test.done(); });
    },
    'test-string-8289095d-7f87-46fd-9a2f-418f5d2c6420': function (test) {
        var tpl = v('s');
        tpl(1).
            then(function (result) {
                test.ok(false, 'Должна быть ошибка');
            }, function (err) {
                test.ok(err);
            }).done(function () { test.done(); });
    },
    'test-string-4cd20128-4c1c-4691-886d-04445f2e6d31': function (test) {
        var tpl = v('s');
        tpl(function(){}).
            then(function (result) {
                test.ok(false, 'Должна быть ошибка');
            }, function (err) {
                test.ok(err);
            }).done(function () { test.done(); });
    },
    'test-string-825b4ed9-7a75-4a26-a19d-85b98e83023d': function (test) {
        var tpl = v('s');
        tpl({}).
            then(function (result) {
                test.ok(false, 'Должна быть ошибка');
            }, function (err) {
                test.ok(err);
            }).done(function () { test.done(); });
    },

    // Конвертируем в строку
    'test-string-3ae506c8-2049-4925-8c52-d67434596255': function (test) {
        var tpl = v('s toString');
        tpl().
            then(function (result) {
                test.equals(result, '');
            }, function (err) {
                test.ok(false, 'Ошибки быть не должно: ' + err);
            }).done(function () { test.done(); });
    },
    'test-string-07f9e5d0-9b96-4fdc-b927-3d525f4d0d21': function (test) {
        var tpl = v('s toStr');
        tpl().
            then(function (result) {
                test.equals(result, '')
            }, function (err) {
                test.ok(false, 'Ошибки быть не должно: ' + err);
            }).done(function () { test.done(); });
    },
    'test-string-a8c9794e-8f48-4650-a11a-28fb2fba0673': function (test) {
        var tpl = v('s toString');
        tpl(undefined).
            then(function (result) {
                test.equals(result, '');
            }, function (err) {
                test.ok(false, 'Ошибки быть не должно: ' + err);
            }).done(function () { test.done(); });
    },
    'test-string-2409f2bc-b637-4e02-a54a-9c4c65fb263a': function (test) {
        var tpl = v('s toString');
        tpl(null).
            then(function (result) {
                test.equals(result, '');
            }, function (err) {
                test.ok(false, 'Ошибки быть не должно: ' + err);
            }).done(function () { test.done(); });
    },
    'test-string-ce4bb2de-0aa3-4eb2-9f24-aca62dd8f4b1': function (test) {
        var tpl = v('s toString');
        tpl(-1).
            then(function (result) {
                test.equals(result, '-1');
            }, function (err) {
                test.ok(false, 'Ошибки быть не должно: ' + err);
            }).done(function () { test.done(); });
    },
    'test-string-c3993bfb-1eee-436a-9c4a-bf0d8da7ea0f': function (test) {
        var tpl = v('s toString');
        tpl(0).
            then(function (result) {
                test.equals(result, '0');
            }, function (err) {
                test.ok(false, 'Ошибки быть не должно: ' + err);
            }).done(function () { test.done(); });
    },
    'test-string-d23481ec-d23f-4891-a71d-e34995b673cc': function (test) {
        var tpl = v('s toString');
        tpl(1).
            then(function (result) {
                test.equals(result, '1');
            }, function (err) {
                test.ok(false, 'Ошибки быть не должно: ' + err);
            }).done(function () { test.done(); });
    },
    'test-string-8f45370a-bbe4-4a6a-9c05-769efbe28b26': function (test) {
        var tpl = v('s toString');
        tpl('qwe e').
            then(function (result) {
                test.equals(result, 'qwe e');
            }, function (err) {
                test.ok(false, 'Ошибки быть не должно: ' + err);
            }).done(function () { test.done(); });
    },
    // Ломаем
    'test-string-20451651-f73a-4b87-bf3a-6e1ca538b105': function (test) {
        var tpl = v('s toString');
        tpl(true).
            then(function (result) {
                test.ok(false, 'Должна быть ошибка');
            }, function (err) {
                test.ok(err);
            }).done(function () { test.done(); });
    },
    'test-string-1e54e454-c913-4e42-a5b5-160fe4bd1d3a': function (test) {
        var tpl = v('s toString');
        tpl(false).
            then(function (result) {
                test.ok(false, 'Должна быть ошибка');
            }, function (err) {
                test.ok(err);
            }).done(function () { test.done(); });
    },
    'test-string-a43ad2b9-5cc0-45f8-a36f-9b90f9b0feb1': function (test) {
        var tpl = v('s toString');
        tpl(function(){}).
            then(function (result) {
                test.ok(false, 'Должна быть ошибка');
            }, function (err) {
                test.ok(err);
            }).done(function () { test.done(); });
    },
    'test-string-dab5f26d-f831-48f1-86fc-170a07e9c337': function (test) {
        var tpl = v('s toString');
        tpl({}).
            then(function (result) {
                test.ok(false, 'Должна быть ошибка');
            }, function (err) {
                test.ok(err);
            }).done(function () { test.done(); });
    },

    // min
    'test-string-0432ade1-3fe1-4153-9c32-a0922a42bf62': function (test) {
        var tpl = v('s min 0');
        tpl('a b').
            then(function (result) {
                test.equals(result, 'a b');
            }, function (err) {
                test.ok(false, 'Ошибки быть не должно: ' + err);
            }).done(function () { test.done(); });
    },
    'test-string-788eb957-dd3a-4378-bf66-eb69a5317cdb': function (test) {
        var tpl = v('s min 2');
        tpl('a b').
            then(function (result) {
                test.equals(result, 'a b');
            }, function (err) {
                test.ok(false, 'Ошибки быть не должно: ' + err);
            }).done(function () { test.done(); });
    },
    'test-string-0e61ee7c-fba3-4f37-88c8-c2b6985d6d14': function (test) {
        var tpl = v('s min 3');
        tpl('a b').
            then(function (result) {
                test.equals(result, 'a b');
            }, function (err) {
                test.ok(false, 'Ошибки быть не должно: ' + err);
            }).done(function () { test.done(); });
    },
    // Ломаем
    'test-string-7755cadd-2210-4699-b188-77c211fd53af': function (test) {
        var tpl = v('s min 4');
        tpl('a b').
            then(function (result) {
                test.ok(false, 'Должна быть ошибка');
            }, function (err) {
                test.ok(err);
            }).done(function () { test.done(); });
    },
    'test-string-519a4f65-a250-442d-96b5-2540fba1f8e2': function (test) {
        var tpl = v('s min 10');
        tpl('a b').
            then(function (result) {
                test.ok(false, 'Должна быть ошибка');
            }, function (err) {
                test.ok(err);
            }).done(function () { test.done(); });
    },
    'test-string-d20fbee0-7818-4e20-a53c-db10b51b51ef': function (test) {
        var tpl = v('s min -1');
        tpl('a b').
            then(function (result) {
                test.ok(false, 'Должна быть ошибка');
            }, function (err) {
                test.ok(err);
            }).done(function () { test.done(); });
    },
    'test-string-27eb3944-16c0-4168-8411-59b7c72c2e77': function (test) {
        var tpl = v('s min 1.1');
        tpl('a b').
            then(function (result) {
                test.ok(false, 'Должна быть ошибка');
            }, function (err) {
                test.ok(err);
            }).done(function () { test.done(); });
    },
    'test-string-1315156f-eb79-4e48-a29b-30e8692022c9': function (test) {
        var tpl = v('s min q');
        tpl('a b').
            then(function (result) {
                test.ok(false, 'Должна быть ошибка');
            }, function (err) {
                test.ok(err);
            }).done(function () { test.done(); });
    },

    // max
    'test-string-1e487941-e0dc-4f53-8ddf-2cda85793cc1': function (test) {
        var tpl = v('s max 3');
        tpl('a b').
            then(function (result) {
                test.equals(result, 'a b');
            }, function (err) {
                test.ok(false, 'Ошибки быть не должно: ' + err);
            }).done(function () { test.done(); });
    },
    'test-string-31691c3e-b917-4cc5-a640-532f58992001': function (test) {
        var tpl = v('s max 4');
        tpl('a b').
            then(function (result) {
                test.equals(result, 'a b');
            }, function (err) {
                test.ok(false, 'Ошибки быть не должно: ' + err);
            }).done(function () { test.done(); });
    },
    'test-string-339f5665-0b07-4c6f-9377-ee520faceae3': function (test) {
        var tpl = v('s max 200');
        tpl('a b').
            then(function (result) {
                test.equals(result, 'a b');
            }, function (err) {
                test.ok(false, 'Ошибки быть не должно: ' + err);
            }).done(function () { test.done(); });
    },
    'test-string-ebff08b4-c202-4040-8aae-3826e9c2e572': function (test) {
        var tpl = v('s max 0');
        tpl('').
            then(function (result) {
                test.equals(result, '');
            }, function (err) {
                test.ok(false, 'Ошибки быть не должно: ' + err);
            }).done(function () { test.done(); });
    },
    // Ломаем
    'test-string-46e3a14c-eb70-484d-a143-ae514d6c2f2d': function (test) {
        var tpl = v('s max 0');
        tpl('a b').
            then(function (result) {
                test.ok(false, 'Должна быть ошибка');
            }, function (err) {
                test.ok(err);
            }).done(function () { test.done(); });
    },
    'test-string-77dabc57-387d-4329-b030-81e4d8a38ca6': function (test) {
        var tpl = v('s max 2');
        tpl('a b').
            then(function (result) {
                test.ok(false, 'Должна быть ошибка');
            }, function (err) {
                test.ok(err);
            }).done(function () { test.done(); });
    },
    'test-string-db561ccd-2912-4880-9998-5718558023a7': function (test) {
        var tpl = v('s max -1');
        tpl('a b').
            then(function (result) {
                test.ok(false, 'Должна быть ошибка');
            }, function (err) {
                test.ok(err);
            }).done(function () { test.done(); });
    },
    'test-string-2fc22cab-0c4f-4e11-aa9e-5f8be7c95795': function (test) {
        var tpl = v('s max 1.1');
        tpl('a b').
            then(function (result) {
                test.ok(false, 'Должна быть ошибка');
            }, function (err) {
                test.ok(err);
            }).done(function () { test.done(); });
    },
    'test-string-944fd1ec-1def-4c0d-ba8c-d454eccd0697': function (test) {
        var tpl = v('s max q');
        tpl('a b').
            then(function (result) {
                test.ok(false, 'Должна быть ошибка');
            }, function (err) {
                test.ok(err);
            }).done(function () { test.done(); });
    },

    // min max
    'test-string-2f55006d-a933-48a2-a135-8735dd493d05': function (test) {
        var tpl = v('s toStr min 0 max 3');
        tpl().
            then(function (result) {
                test.equals(result, '');
            }, function (err) {
                test.ok(false, 'Ошибки быть не должно: ' + err);
            }).done(function () { test.done(); });
    },
    'test-string-3fc1e895-dbe5-476b-a23d-8ed7f8e12523': function (test) {
        var tpl = v('s toStr min 0 max 3');
        tpl('qwe').
            then(function (result) {
                test.equals(result, 'qwe');
            }, function (err) {
                test.ok(false, 'Ошибки быть не должно: ' + err);
            }).done(function () { test.done(); });
    },
    'test-string-15fb50f2-9387-464c-87e7-37b97bcc7895': function (test) {
        var tpl = v('s toStr min 1');
        tpl('qwe asdfg rt').
            then(function (result) {
                test.equals(result, 'qwe asdfg rt');
            }, function (err) {
                test.ok(false, 'Ошибки быть не должно: ' + err);
            }).done(function () { test.done(); });
    },
    // Ломаем
    'test-string-7f22cb0e-3641-4b44-9429-277f57fd0b2c': function (test) {
        var tpl = v('s min 0 max 3');
        tpl().
            then(function (result) {
                test.ok(false, 'Должна быть ошибка');
            }, function (err) {
                test.ok(err);
            }).done(function () { test.done(); });
    },
    'test-string-111b7e8b-7c99-4174-a480-2f0baddb043f': function (test) {
        var tpl = v('s min 3 max 4');
        tpl('qw').
            then(function (result) {
                test.ok(false, 'Должна быть ошибка');
            }, function (err) {
                test.ok(err);
            }).done(function () { test.done(); });
    },
    'test-string-552c63b9-7281-4a77-af18-161c3f998307': function (test) {
        var tpl = v('s min 3 max 4');
        tpl('qw     r').
            then(function (result) {
                test.ok(false, 'Должна быть ошибка');
            }, function (err) {
                test.ok(err);
            }).done(function () { test.done(); });
    },

    // Кастомные валидации
    'test-string-91142e6a-f0f1-4dca-bfcc-4f4cd6f04e57': function (test) {
        var tpl = v(['s', function (obj, tpl, cfg) { return obj.match(/^[qew]+$/); }]);
        tpl('qwe').
            then(function (result) {
                test.equals(result, 'qwe');
            }, function (err) {
                test.ok(false, 'Ошибки быть не должно: ' + err);
            }).done(function () { test.done(); });
    },
    'test-string-13e4aec7-2efa-4e0c-8217-39d76dcd7abc': function (test) {
        var tpl = v(['s toStr', function (obj, tpl, cfg) { return obj.match(/^[a-z]*$/); }]);
        tpl().
            then(function (result) {
                test.equals(result, '');
            }, function (err) {
                test.ok(false, 'Ошибки быть не должно: ' + err);
            }).done(function () { test.done(); });
    },
    'test-string-3f2cab54-c4c9-463c-8edd-c12c27281a42': function (test) {
        var tpl = v(['s', function (obj, tpl, cfg) { return obj.match(/^[qew]+$/); }, function (obj, tpl, cfg) { return obj.match(/^[a-z]+$/); }]);
        tpl('qwe').
            then(function (result) {
                test.equals(result, 'qwe');
            }, function (err) {
                test.ok(false, 'Ошибки быть не должно: ' + err);
            }).done(function () { test.done(); });
    },
    // Ломаем
    'test-string-c87e6511-d851-44be-99f6-97fa414984a1': function (test) {
        var tpl = v(['s', function (obj, tpl, cfg) { return !(obj === 'qwe'); }]);
        tpl('qwe').
            then(function (result) {
                test.ok(false, 'Должна быть ошибка');
            }, function (err) {
                test.ok(err);
            }).done(function () { test.done(); });
    },
    'test-string-11234baa-0aa9-4c72-8fb6-e523381371f9': function (test) {
        var tpl = v(['s', function (tpl, cfg, obj) { return false; }, function (obj, tpl, cfg) { return !(obj === 'qwe'); }]);
        tpl('qwe').
            then(function (result) {
                test.ok(false, 'Должна быть ошибка');
            }, function (err) {
                test.ok(err);
            }).done(function () { test.done(); });
    },
    'test-string-7a9f8c8d-a7e0-4157-ba2f-18bb8a3c8cc7': function (test) {
        var tpl = v(['s', function (obj, tpl, cfg) { return obj.q.e; }, function (obj, tpl, cfg) { return obj.match(/^[az]+$/); }]);
        tpl('qwe').
            then(function (result) {
                test.ok(false, 'Должна быть ошибка');
            }, function (err) {
                test.ok(err);
            }).done(function () { test.done(); });
    },
    'test-string-20346b24-1cf3-46bb-ba92-069ddd1b7dee': function (test) {
        var tpl = v(['s', 1]);
        tpl('qwe').
            then(function (result) {
                test.ok(false, 'Должна быть ошибка');
            }, function (err) {
                test.ok(err);
            }).done(function () { test.done(); });
    },
    'test-string-99eada41-8bee-449e-a2e9-199d822388b8': function (test) {
        var tpl = v('s null');
        tpl(null)
            .then(function (result) {
                test.deepEqual(result, null);
            }, function (err) {
                test.ok(false, 'Ошибки быть не должно: ' + err);
            }).done(function () { test.done(); });
    },

    // Default
    'test-string-4782eaf2-ee34-4d1c-afab-24e7ef9d721c': function (test) {
        var tpl = v('s');
        tpl(null)
            .then(function (result) {
                test.ok(false, 'Должна быть ошибка');
            }, function (err) {
                test.ok(err);
            }).done(function () { test.done(); });
    },
    'test-string-c562eb04-4b20-4571-a91f-bec31fb30b44': function (test) {
        var tpl = v('s null');
        tpl(null)
            .then(function (result) {
                test.equals(result, null);
            }, function (err) {
                test.ok(false, 'Ошибки быть не должно: ' + err);
            }).done(function () { test.done(); });
    },
    'test-string-3ac85413-9a81-4c33-9d92-8081bebb7f52': function (test) {
        var tpl = v('s null');
        tpl()
            .then(function (result) {
                test.equals(result, null);
            }, function (err) {
                test.ok(false, 'Ошибки быть не должно: ' + err);
            }).done(function () { test.done(); });
    },
    'test-string-04b66bec-48f9-4da6-ac98-4c2b8643867f': function (test) {
        var tpl = v('s');
        tpl(null)
            .then(function (result) {
                test.ok(false, 'Должна быть ошибка');
            }, function (err) {
                test.ok(err);
            }).done(function () { test.done(); });
    },
    'test-string-24c73264-f212-4b01-8675-8df4bf1ef09e': function (test) {
        var tpl = v('s');
        tpl()
            .then(function (result) {
                test.ok(false, 'Должна быть ошибка');
            }, function (err) {
                test.ok(err);
            }).done(function () { test.done(); });
    },
    'test-string-c3b06e7b-2a81-422f-896a-57013e08e7f0': function (test) {
        var tpl = v('s null def null');
        tpl(undefined)
            .then(function (result) {
                test.equals(result, null);
            }, function (err) {
                test.ok(false, 'Ошибки быть не должно: ' + err);
            }).done(function () { test.done(); });
    },
    'test-string-308a7b5b-cade-43f6-a520-7a5c809bd1c9': function (test) {
        var tpl = v('s null def null min 1');
        tpl(null)
            .then(function (result) {
                test.equals(result, null);
            }, function (err) {
                test.ok(false, 'Ошибки быть не должно: ' + err);
            }).done(function () { test.done(); });
    }
};