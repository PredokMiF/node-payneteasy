"use strict";

/* Описание работы со словарями. Когда передается строка, равная одгому из заранее заданных значений.
 * В валидатор сразу можно передавать элементарные типы, в частности числа:
 */
var _ = require('lodash-node');

var v = require('../app');

module.exports = {
    // Проверяем что валидация словарю работает
    'test-any-50e612f0-7f42-4149-9972-43e3fcc46ba9': function (test) {
        var tpl = v('any');
        tpl().
            then(function (result) {
                test.equals(result, undefined);
            }, function (err) {
                test.ok(false, 'Ошибки быть не должно: ' + err);
            }).done(function () { test.done(); });
    },
    'test-any-86152c9b-5b48-41a5-abd9-e981994f1f37': function (test) {
        var tpl = v('any');
        tpl(undefined).
            then(function (result) {
                test.equals(result, undefined);
            }, function (err) {
                test.ok(false, 'Ошибки быть не должно: ' + err);
            }).done(function () { test.done(); });
    },
    'test-any-4aba69d0-6f30-4414-821b-a6b4a5f9e928': function (test) {
        var tpl = v('any');
        tpl(null).
            then(function (result) {
                test.equals(result, null);
            }, function (err) {
                test.ok(false, 'Ошибки быть не должно: ' + err);
            }).done(function () { test.done(); });
    },
    'test-any-10eebb38-5801-423a-950d-03f23c9dcf17': function (test) {
        var tpl = v('any');
        tpl(false).
            then(function (result) {
                test.equals(result, false);
            }, function (err) {
                test.ok(false, 'Ошибки быть не должно: ' + err);
            }).done(function () { test.done(); });
    },
    'test-any-9fe404eb-8dd6-4cd5-9c3d-fd1e38e19c5c': function (test) {
        var tpl = v('any');
        tpl(1).
            then(function (result) {
                test.equals(result, 1);
            }, function (err) {
                test.ok(false, 'Ошибки быть не должно: ' + err);
            }).done(function () { test.done(); });
    },
    'test-any-8a79ebbf-7c36-453b-b242-3a57805689dd': function (test) {
        var tpl = v('any');
        tpl([]).
            then(function (result) {
                test.deepEqual(result, []);
            }, function (err) {
                test.ok(false, 'Ошибки быть не должно: ' + err);
            }).done(function () { test.done(); });
    },
    'test-any-dab92d00-35c8-4643-bdb4-82e5de8e9b6a': function (test) {
        var tpl = v('any');
        tpl({q:1}).
            then(function (result) {
                test.deepEqual(result, {q:1});
            }, function (err) {
                test.ok(false, 'Ошибки быть не должно: ' + err);
            }).done(function () { test.done(); });
    },
    'test-any-d4298b3a-8da5-4840-8315-5c4b6d02d881': function (test) {
        var tpl = v(['any', function(){return true;}]);
        tpl({q:1}).
            then(function (result) {
                test.deepEqual(result, {q:1});
            }, function (err) {
                test.ok(false, 'Ошибки быть не должно: ' + err);
            }).done(function () { test.done(); });
    },
    'test-any-12190c59-fd2c-47b4-8d0b-b07647af80fc': function (test) {
        var tpl = v(['any', function(val, tpl, cfg){return val && val.q === 1;}]);
        tpl({q:1}).
            then(function (result) {
                test.deepEqual(result, {q:1});
            }, function (err) {
                test.ok(false, 'Ошибки быть не должно: ' + err);
            }).done(function () { test.done(); });
    },
    // Ломаем
    'test-any-72374760-56aa-44b1-83b0-a3d1e9d98ef1': function (test) {
        var tpl = v('any e');
        tpl().
            then(function (result) {
                test.ok(false, 'Должна быть ошибка');
            }, function (err) {
                test.ok(err);
            }).done(function () { test.done(); });
    },
    'test-any-e18139fc-5c40-489e-9175-7d9b72e9cb42': function (test) {
        var tpl = v(['any', function(){return false;}]);
        tpl().
            then(function (result) {
                test.ok(false, 'Должна быть ошибка');
            }, function (err) {
                test.ok(err);
            }).done(function () { test.done(); });
    },
    'test-any-3543bd57-baf5-4cd3-b0b7-f02f21650d98': function (test) {
        var tpl = v(['any', function(val, tpl, cfg){ return !(val && _.isPlainObject(val) && val.w === true); }]);
        tpl({w:true}).
            then(function (result) {
                test.ok(false, 'Должна быть ошибка');
            }, function (err) {
                test.ok(err);
            }).done(function () { test.done(); });
    },
};
