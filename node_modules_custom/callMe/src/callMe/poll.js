"use strict";

var _ = require('lodash-node');
var when = require('when');

var cmn = require('../cmnData');
var createCall = require('../createCall');

var CALL_TYPE = 'poll';
var SEC = 1000;

function poll (evName, userUuid, poolTimes, data) {
    if (!_.isString(evName) || !_.isString(userUuid) || !_.isArray(poolTimes) || poolTimes.length === 0 || !_.every(poolTimes, function(val){return _.isNumber(val);}) || !_.isPlainObject(data)) {
        return when.reject('CallMePoll: Ошибка типов параметров (evName:string, userUuid:string, poolTimes:Array of numbers (sec), data:plainObject');
    }
    return createCall(evName, userUuid, new Date(Date.now() + poolTimes[0] * SEC), {evtype: CALL_TYPE, iter: 0, poolTimes: poolTimes}, data);
}

cmn.callMeTypes[CALL_TYPE] = function (evName, userUuid, evData, data) {
    var cb = cmn.eventCallbacks[evName],
        def;
    if (cb) {
        try {
            def = cb(data);
        } catch (e){
            console.error(e.stack);
            return when.reject();
        }
    } else {
        console.error('No callback for "'+evName+'"');
        def = when.resolve();
    }

    return def.then(
        null,
        function (err) {
            err && console.error(err.stack || err);
            if (evData.iter < evData.poolTimes.length - 1) {
                evData.iter += 1;
            }
            return when.reject(new Date(Date.now() + evData.poolTimes[evData.iter] * SEC));
        }
    );
};

cmn.callMe.poll = poll;